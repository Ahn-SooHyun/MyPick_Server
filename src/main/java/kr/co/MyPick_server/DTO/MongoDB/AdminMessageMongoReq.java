package kr.co.MyPick_server.DTO.MongoDB;

import kr.co.MyPick_server.DTO.chat.ChatMessage.ChatMessageListInfoDTO;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import java.time.LocalDateTime;
import java.util.List;

/**
 * AdminMessageMongoReq is a Data Transfer Object (DTO) used for storing and retrieving
 * chat message details from MongoDB. This class is mapped to the "Chat_List" collection.
 * It contains details about user conversations, system responses, and associated metadata.
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Document(collection = "Chat_List") // Specifies the MongoDB collection name
public class AdminMessageMongoReq {

    /**
     * Unique identifier for the document in MongoDB.
     * This is automatically generated and used as the primary key for the document.
     */
    @Id
    private String id;

    /**
     * The index of the chat room where the message belongs.
     * This field helps group messages by their respective chat sessions.
     */
    private int chatIdx;

    /**
     * The date and time when the message was added to the chat.
     * This timestamp is used for sorting and chronological ordering of messages.
     */
    private LocalDateTime date;

    /**
     * The question or input provided by the user during the chat session.
     * This field stores the user's original message or query.
     */
    private String question;

    /**
     * The answer generated by the system in response to the user's question.
     * This could be an AI-generated message, a predefined response, or other output.
     */
    private String answer;

    /**
     * A summary of the conversation or message, if applicable.
     * This field provides a concise representation of the chat content.
     */
    private String summary;

    /**
     * A list of additional message details, possibly extending the chat's context or metadata.
     * Each item in the list is represented by a `ChatMessageListInfoDTO`.
     */
    private List<ChatMessageListInfoDTO> list;
}
