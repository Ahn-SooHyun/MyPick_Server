package kr.co.MyPick_server.DTO.MongoDB;

import kr.co.MyPick_server.DTO.chat.ChatMessage.ChatMessageListInfoDTO;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import java.time.LocalDateTime;
import java.util.List;

/**
 * ChatMessageMongoReq is a Data Transfer Object (DTO) used for storing and retrieving
 * chat message details from MongoDB. This class is mapped to the "Chat_List" collection,
 * and it represents the structure of a chat message document in the database.
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Document(collection = "Chat_List") // Specifies the MongoDB collection name
public class ChatMessageMongoReq {

    /**
     * The unique identifier for the document in the MongoDB collection.
     * This field acts as the primary key for the document and is automatically
     * generated by MongoDB if not provided.
     */
    @Id
    private String id;

    /**
     * The unique index of the user associated with the message.
     * This field links the chat message to a specific user in the system.
     */
    private int userIdx;

    /**
     * The unique index of the chat room where this message was exchanged.
     * This field groups messages under a specific chat session.
     */
    private int chatIdx;

    /**
     * The timestamp indicating when the message was added to the chat.
     * This field is used for ordering messages chronologically and tracking activity times.
     */
    private LocalDateTime date;

    /**
     * The original question or input provided by the user during the chat session.
     * This field stores the user's input to maintain the context of the conversation.
     */
    private String question;

    /**
     * The system-generated response to the user's question.
     * This field captures the output from the system, AI, or predefined logic.
     */
    private String answer;

    /**
     * A summarized or concise version of the chat conversation, if applicable.
     * This field is used to provide a quick overview of the interaction.
     */
    private String summary;

    /**
     * A list of additional details or metadata about the chat messages.
     * Each item in the list is represented by a `ChatMessageListInfoDTO`, which could
     * include specific information about items, references, or categorized data related to the chat.
     */
    private List<ChatMessageListInfoDTO> list;
}
